% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counts2PCA.R
\name{counts2PCA}
\alias{counts2PCA}
\title{PCA of voom-transformed counts.}
\usage{
counts2PCA(counts, info, ids, plotit = TRUE, pcas2return = 3,
  plot.cols = "black", ...)
}
\arguments{
\item{counts}{Counts matrix, typically transformed by limma::voom.
Possibly output from pipelimma, in the slot "voom".}

\item{info}{The experimental design information matrix}

\item{ids}{A vector of the individual names}

\item{plotit}{Logical, should the pca be plotted?}

\item{...}{additional arguments passed on to pairs, for example,
the colors of bars}
}
\value{
a list containing a dataframe with the experimental
design data, merged with the 1st 3 principal component axes
and a vector of %variance explained by PCA axes.
}
\description{
\code{counts2PCA} Run principal component analysis on matrix of
voom-normalized counts
}
\details{
This function uses the R function princomp to calculate
principal components
}
\examples{
\dontrun{
data(kidney) #from the simseq package
counts<-kidney$counts
counts<-counts[sample(1:nrow(counts),1000),]
info<-data.frame(rep=kidney$replic,
                 treatment=kidney$treatment)
stats<-pipeLIMMA(counts=counts,
                 info=info,
                 formula = " ~ treatment",
                 block=NULL)
pc <- voom2PCA(counts=stats$voom[["E"]],
               info=info,
               ids=rownames(info),
               plotit=TRUE)
library(ggplot2)
ggplot(pc, aes(x=PC1, y=PC2, col=treatment))+
   geom_point()
}
}
